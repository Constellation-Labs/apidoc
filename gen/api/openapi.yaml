openapi: 3.0.1
info:
  contact:
    email: operators@constellationnetwork.io
  title: Node Public API
  version: 1.0.0
servers:
- url: /
tags:
- name: Cluster
- name: Metrics
- name: Metadata
- name: Transaction
paths:
  /cluster/info:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NodeState'
                type: array
          description: Cluster observation
      summary: Get current cluster observation
      tags:
      - Cluster
      x-accepts: application/json
  /metrics:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Node's metrics
      summary: Get node's metrics
      tags:
      - Metrics
      x-accepts: application/json
  /micrometer-metrics:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Node's micrometer metrics
      summary: Get node's micrometer metrics
      tags:
      - Metrics
      x-accepts: text/plain
  /address/{address}:
    get:
      parameters:
      - description: Address of wallet to return
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
          description: Wallet balance for given address
      summary: Get wallet balance for given address
      tags:
      - Metadata
      x-accepts: application/json
  /transaction:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Transaction generated by Constellation Wallet
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Transaction hash
        "400":
          description: Invalid transaction
      summary: Send transaction to network
      tags:
      - Transaction
      x-contentType: application/json
      x-accepts: application/json
  /transaction/{hash}:
    get:
      parameters:
      - description: Hash of transaction to return
        explode: false
        in: path
        name: hash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Transaction
        "404":
          description: Transaction not found
      summary: Get transaction from node
      tags:
      - Transaction
      x-accepts: application/json
  /transaction/last-ref/{address}:
    get:
      parameters:
      - description: Address to get the last reference
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: Last reference
        "404":
          description: Last reference not found
      summary: Get last reference of a given address
      tags:
      - Transaction
      x-accepts: application/json
components:
  schemas:
    Id:
      example:
        hex: hex
      properties:
        hex:
          type: string
      type: object
    NodeState:
      example:
        ip:
          port: 0
          host: host
        reputation: 6.027456183070403
        id:
          hex: hex
        status: status
      properties:
        id:
          $ref: '#/components/schemas/Id'
        ip:
          $ref: '#/components/schemas/NodeState_ip'
        status:
          type: string
        reputation:
          type: number
      type: object
    Balance:
      example:
        rewardsBalance: 5.962133916683182
        ancestorReputation: '{}'
        balance: 0.8008281904610115
        memPoolBalance: 6.027456183070403
        ancestorBalances: '{}'
        reputation: 5.637376656633329
        balanceByLatestSnapshot: 1.4658129805029452
      properties:
        balance:
          type: number
        memPoolBalance:
          type: number
        balanceByLatestSnapshot:
          type: number
        rewardsBalance:
          type: number
        reputation:
          type: number
        ancestorBalances:
          type: object
        ancestorReputation:
          type: object
      type: object
    Transaction:
      type: object
    inline_response_200:
      example:
        metrics:
          key: metrics
      properties:
        metrics:
          additionalProperties:
            type: string
          type: object
      type: object
    inline_response_200_1:
      example:
        prevHash: prevHash
        ordinal: 0.8008281904610115
      properties:
        prevHash:
          type: string
        ordinal:
          type: number
      type: object
    NodeState_ip:
      example:
        port: 0
        host: host
      properties:
        host:
          type: string
        port:
          type: integer
      type: object

